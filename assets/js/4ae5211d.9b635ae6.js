(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{289:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return o})),r.d(t,"default",(function(){return u}));var n=r(4),a=r(10),s=(r(0),r(713)),i={id:"browser-authority",title:"Browser Authority",description:"How browser authority works"},c={unversionedId:"browser-authority",id:"browser-authority",isDocsHomePage:!1,title:"Browser Authority",description:"How browser authority works",source:"@site/../docs/browser-authority.md",slug:"/browser-authority",permalink:"/docs/next/browser-authority",editUrl:"https://github.com/vulnsystem/www.gitcoins.io/blob/documentation/website/../docs/browser-authority.md",version:"current",lastUpdatedAt:1621394533,formattedLastUpdatedAt:"5/19/2021",sidebar:"docs",previous:{title:"Openssl Labs",permalink:"/docs/next/openssl-labs"},next:{title:"Introduction",permalink:"/docs/next/getting-started"}},o=[{value:"Generate server certificate",id:"generate-server-certificate",children:[]},{value:"Create a webpage",id:"create-a-webpage",children:[]},{value:"Start openssl server",id:"start-openssl-server",children:[]},{value:"Send request",id:"send-request",children:[]},{value:"Add server cert in the manager",id:"add-server-cert-in-the-manager",children:[]},{value:"index.html loaded",id:"indexhtml-loaded",children:[]},{value:"souce code",id:"souce-code",children:[]}],l={toc:o};function u(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},l,i,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("img",{alt:"openssl",src:r(768).default})),Object(s.b)("p",null,"This lab to show you how authority of web browser works."),Object(s.b)("h2",{id:"generate-server-certificate"},"Generate server certificate"),Object(s.b)("p",null,"We will create the CA and server certificate which key type is rsa:4096. The detailed ",Object(s.b)("a",{parentName:"p",href:"https://github.com/vulnsystem/OpensslCertificateVerify/browser-authority"},"source code")," have been push to github. Please star it when helpful. The CA and server certificates will generate after you run the ",Object(s.b)("strong",{parentName:"p"},"gen.sh"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},'# 1. Generate server CA\'s private key and self-signed certificate\nopenssl req -x509 -newkey rsa:4096 -days 365 -nodes -keyout ca.key -out ca.cert -subj "/CN=localhost/emailAddress=ca@gmail.com"\n\necho "CA\'s self-signed certificate"\nopenssl x509 -in ca.cert -noout -text\n\n# 2. Generate web server\'s private key and certificate signing request (CSR)\nopenssl req -newkey rsa:4096 -nodes -keyout server.key -out server.req -subj "/CN=localhost/emailAddress=server@gmail.com"\n\n# 3. Use CA\'s private key to sign web server\'s CSR and get back the signed certificate\nopenssl x509 -req -in server.req -days 60 -CA ca.cert -CAkey ca.key -CAcreateserial -out server.cert -extfile server.ext\n\necho "Server\'s signed certificate"\nopenssl x509 -in server.cert -noout -text\n\n# 4. To verify the server certificate aginst by root CA\necho "server\'s certificate verification"\nopenssl verify -show_chain -CAfile ca.cert server.cert\n\n')),Object(s.b)("h2",{id:"create-a-webpage"},"Create a webpage"),Object(s.b)("p",null,"In the github repository, there is a index.html file in the same directory as gen.sh. The webpage will be loaded when browser send a request from server."),Object(s.b)("h2",{id:"start-openssl-server"},"Start openssl server"),Object(s.b)("p",null,"To make a simple server, we can use openssl s_server command which implements a generic SSL/TLS server which listens for connections on a given port using SSL/TLS. Please issue the following command to start a TLS server."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"openssl s_server -accept 20000 -cert server.cert -key server.key  -WWW -debug -tlsextdebug\n")),Object(s.b)("p",null,"The useful options in this command:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"accept: the optional TCP host and port to listen on for connections. If not specified, *:4433 is used."),Object(s.b)("li",{parentName:"ul"},"cert and key: the certificate and key of server are required, which have generated by gen.sh"),Object(s.b)("li",{parentName:"ul"},"WWW: Emulates a simple web server. It is very useful. The pages will be resolved relative to the current directory, for example if the URL https://localhost:20000/index.html is requested the file ./index.html will be loaded. "),Object(s.b)("li",{parentName:"ul"},"debug and tlsextdebug: to show the detailed dump information of all traffic.")),Object(s.b)("h2",{id:"send-request"},"Send request"),Object(s.b)("p",null,"After server started successfully, we can use browser to send a request as following. "),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},"https://localhost:20000/index.html\n")),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"But security risk warning occur.")," Because its certificate issuer is unknow and the server certificate created by ourself is not trusted by browser.\n",Object(s.b)("img",{alt:"firefox-security-warning",src:r(863).default})),Object(s.b)("p",null,"There are two ways to open the index"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Click ",Object(s.b)("strong",{parentName:"li"},"Advanced...")," buttom and ",Object(s.b)("strong",{parentName:"li"},"Accept the Risk and Continue")),Object(s.b)("li",{parentName:"ul"},"Add the CA certificate which sign the server certificate in the certificate manager of browser.")),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"After CA ceritificate added in the manager, the browser will trust all the server's certificate which signed by the CA's.")),Object(s.b)("h2",{id:"add-server-cert-in-the-manager"},"Add server cert in the manager"),Object(s.b)("p",null,"You can found the certificate manager is located at ",Object(s.b)("strong",{parentName:"p"},"about:preferences#privacy")," in the firefox. And import the CA's cert to the manager.\n",Object(s.b)("img",{alt:"firefox-security-warning",src:r(864).default})),Object(s.b)("h2",{id:"indexhtml-loaded"},"index.html loaded"),Object(s.b)("p",null,"There is ",Object(s.b)("strong",{parentName:"p"},"Hello World")," in the webpage."),Object(s.b)("h2",{id:"souce-code"},"souce code"),Object(s.b)("p",null,"The detailed ",Object(s.b)("a",{parentName:"p",href:"https://github.com/vulnsystem/OpenssLabs/blob/main/browser-authority"},"source code")," have been push to github. Please star it when helpful. "))}u.isMDXComponent=!0},713:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return h}));var n=r(0),a=r.n(n);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},b=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),b=u(r),p=n,h=b["".concat(i,".").concat(p)]||b[p]||d[p]||s;return r?a.a.createElement(h,c(c({ref:t},l),{},{components:r})):a.a.createElement(h,c({ref:t},l))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=p;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<s;l++)i[l]=r[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},768:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/openssl-685ed43c9e0088918381ee7415177c98.png"},863:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/firefox-security-warning-4916137e0328cdb63b5560e1e7c286b1.png"},864:function(e,t,r){"use strict";r.r(t),t.default=r.p+"assets/images/firefox-certificate-manager-e23623ff1b4afa3c3b4472c120195b4c.png"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{373:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var o=n(4),a=n(10),i=(n(0),n(707)),r={id:"components-and-apis",title:"Core Components and APIs"},c={unversionedId:"components-and-apis",id:"version-0.64/components-and-apis",isDocsHomePage:!1,title:"Core Components and APIs",description:"React Native provides a number of built-in Core Components ready for you to use in your app. You can find them all in the left sidebar (or menu above, if you are on a narrow screen). If you're not sure where to get started, take a look at the following categories:",source:"@site/versioned_docs/version-0.64/components-and-apis.md",slug:"/components-and-apis",permalink:"/docs/components-and-apis",editUrl:"https://github.com/vulnsystem/www.gitcoins.io/blob/documentation/website/../docs/components-and-apis.md",version:"0.64",lastUpdatedAt:1620899066,formattedLastUpdatedAt:"5/13/2021",sidebar:"version-0.64/components",next:{title:"ActivityIndicator",permalink:"/docs/activityindicator"}},s=[{value:"Basic Components",id:"basic-components",children:[]},{value:"User Interface",id:"user-interface",children:[]},{value:"List Views",id:"list-views",children:[]},{value:"Android Components and APIs",id:"android-components-and-apis",children:[]},{value:"iOS Components and APIs",id:"ios-components-and-apis",children:[]},{value:"Others",id:"others",children:[]}],l={toc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"React Native provides a number of built-in ",Object(i.b)("a",{parentName:"p",href:"intro-react-native-components"},"Core Components")," ready for you to use in your app. You can find them all in the left sidebar (or menu above, if you are on a narrow screen). If you're not sure where to get started, take a look at the following categories:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"components-and-apis#basic-components"},"Basic Components")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"components-and-apis#user-interface"},"User Interface")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"components-and-apis#list-views"},"List Views")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"components-and-apis#android-components-and-apis"},"Android-specific")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"components-and-apis#ios-components-and-apis"},"iOS-specific")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"components-and-apis#others"},"Others"))),Object(i.b)("p",null,"You're not limited to the components and APIs bundled with React Native. React Native has a community of thousands of developers. If you're looking for a library that does something specific, please refer to ",Object(i.b)("a",{parentName:"p",href:"libraries#finding-libraries"},"this guide about finding libraries"),"."),Object(i.b)("h2",{id:"basic-components"},"Basic Components"),Object(i.b)("p",null,"Most apps will end up using one of these basic components."),Object(i.b)("div",{className:"component-grid component-grid-border"},Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./view"},Object(i.b)("h3",null,"View"),Object(i.b)("p",null,"The most fundamental component for building a UI."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./text"},Object(i.b)("h3",null,"Text"),Object(i.b)("p",null,"A component for displaying text."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./image"},Object(i.b)("h3",null,"Image"),Object(i.b)("p",null,"A component for displaying images."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./textinput"},Object(i.b)("h3",null,"TextInput"),Object(i.b)("p",null,"A component for inputting text into the app via a keyboard."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./scrollview"},Object(i.b)("h3",null,"ScrollView"),Object(i.b)("p",null,"Provides a scrolling container that can host multiple components and views."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./stylesheet"},Object(i.b)("h3",null,"StyleSheet"),Object(i.b)("p",null,"Provides an abstraction layer similar to CSS stylesheets.")))),Object(i.b)("h2",{id:"user-interface"},"User Interface"),Object(i.b)("p",null,"These common user interface controls will render on any platform."),Object(i.b)("div",{className:"component-grid component-grid-border"},Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./button"},Object(i.b)("h3",null,"Button"),Object(i.b)("p",null,"A basic button component for handling touches that should render nicely on any platform."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./switch"},Object(i.b)("h3",null,"Switch"),Object(i.b)("p",null,"Renders a boolean input.")))),Object(i.b)("h2",{id:"list-views"},"List Views"),Object(i.b)("p",null,"Unlike the more generic ",Object(i.b)("a",{parentName:"p",href:"./scrollview"},Object(i.b)("inlineCode",{parentName:"a"},"ScrollView")),", the following list view components only render elements that are currently showing on the screen. This makes them a performant choice for displaying long lists of data."),Object(i.b)("div",{className:"component-grid component-grid-border"},Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./flatlist"},Object(i.b)("h3",null,"FlatList"),Object(i.b)("p",null,"A component for rendering performant scrollable lists."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./sectionlist"},Object(i.b)("h3",null,"SectionList"),Object(i.b)("p",null,"Like ",Object(i.b)("code",null,"FlatList"),", but for sectioned lists.")))),Object(i.b)("h2",{id:"android-components-and-apis"},"Android Components and APIs"),Object(i.b)("p",null,"Many of the following components provide wrappers for commonly used Android classes."),Object(i.b)("div",{className:"component-grid component-grid-border"},Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./backhandler"},Object(i.b)("h3",null,"BackHandler"),Object(i.b)("p",null,"Detect hardware button presses for back navigation."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./drawerlayoutandroid"},Object(i.b)("h3",null,"DrawerLayoutAndroid"),Object(i.b)("p",null,"Renders a ",Object(i.b)("code",null,"DrawerLayout")," on Android."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./permissionsandroid"},Object(i.b)("h3",null,"PermissionsAndroid"),Object(i.b)("p",null,"Provides access to the permissions model introduced in Android M."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./toastandroid"},Object(i.b)("h3",null,"ToastAndroid"),Object(i.b)("p",null,"Create an Android Toast alert.")))),Object(i.b)("h2",{id:"ios-components-and-apis"},"iOS Components and APIs"),Object(i.b)("p",null,"Many of the following components provide wrappers for commonly used UIKit classes."),Object(i.b)("div",{className:"component-grid component-grid-border"},Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./actionsheetios"},Object(i.b)("h3",null,"ActionSheetIOS"),Object(i.b)("p",null,"API to display an iOS action sheet or share sheet.")))),Object(i.b)("h2",{id:"others"},"Others"),Object(i.b)("p",null,"These components may be useful for certain applications. For an exhaustive list of components and APIs, check out the sidebar to the left (or menu above, if you are on a narrow screen)."),Object(i.b)("div",{className:"component-grid"},Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./activityindicator"},Object(i.b)("h3",null,"ActivityIndicator"),Object(i.b)("p",null,"Displays a circular loading indicator."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./alert"},Object(i.b)("h3",null,"Alert"),Object(i.b)("p",null,"Launches an alert dialog with the specified title and message."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./animated"},Object(i.b)("h3",null,"Animated"),Object(i.b)("p",null,"A library for creating fluid, powerful animations that are easy to build and maintain."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./dimensions"},Object(i.b)("h3",null,"Dimensions"),Object(i.b)("p",null,"Provides an interface for getting device dimensions."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./keyboardavoidingview"},Object(i.b)("h3",null,"KeyboardAvoidingView"),Object(i.b)("p",null,"Provides a view that moves out of the way of the virtual keyboard automatically."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./linking"},Object(i.b)("h3",null,"Linking"),Object(i.b)("p",null,"Provides a general interface to interact with both incoming and outgoing app links."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./modal"},Object(i.b)("h3",null,"Modal"),Object(i.b)("p",null,"Provides a simple way to present content above an enclosing view."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./pixelratio"},Object(i.b)("h3",null,"PixelRatio"),Object(i.b)("p",null,"Provides access to the device pixel density."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./refreshcontrol"},Object(i.b)("h3",null,"RefreshControl"),Object(i.b)("p",null,"This component is used inside a ",Object(i.b)("code",null,"ScrollView")," to add pull to refresh functionality."))),Object(i.b)("div",{className:"component"},Object(i.b)("a",{href:"./statusbar"},Object(i.b)("h3",null,"StatusBar"),Object(i.b)("p",null,"Component to control the app status bar.")))))}b.isMDXComponent=!0},707:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var o=n(0),a=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,r=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(n),m=o,u=p["".concat(r,".").concat(m)]||p[m]||d[m]||i;return n?a.a.createElement(u,c(c({ref:t},l),{},{components:n})):a.a.createElement(u,c({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var l=2;l<i;l++)r[l]=n[l];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);